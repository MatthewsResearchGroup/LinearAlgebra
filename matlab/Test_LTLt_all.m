% Test_LTLt_all Script to test all versions of LTLt algorithms using
% Test_LTLt( version, n_range, nb_range, threshold, error_only )
%
% copyright 2023, 2024 by Robert van de Geijn

n_range = 1:40;
n_range_2_step = 2:2:40;    % Wimmer's algorithm requires size is even
nb_range_unb = [1];        
nb_range = [1 2 3 4];
nb_range_2_step = [ 2 4 6 8 ]; % block size for Wimmer must be even

threshold = 1e-10;
error_only = false;

total_errors = 0;

% Test unblocked variants
total_errors = total_errors + ...
    Test_LTLt( 'unb_right', n_range, nb_range_unb, threshold, ...
               error_only );
total_errors = total_errors + ...
    Test_LTLt( 'unb_left', n_range, nb_range_unb, threshold, ...
               error_only );
total_errors = total_errors + ...
    Test_LTLt( 'unb_2_step', n_range_2_step, nb_range_unb, threshold, ...
               error_only );

% Test blocked variants
total_errors = total_errors + ...
    Test_LTLt( 'blk_right', n_range, nb_range, threshold, ...
               error_only );
total_errors = total_errors + ...
    Test_LTLt( 'blk_fused_righta', n_range, nb_range, threshold, ...
               error_only );
total_errors = total_errors + ...
    Test_LTLt( 'blk_fused_rightb', n_range, nb_range, threshold, ...
               error_only );
total_errors = total_errors + ...
    Test_LTLt( 'blk_left', n_range, nb_range, threshold, ...
               error_only );
total_errors = total_errors + ...
    Test_LTLt( 'blk_2_step', n_range_2_step, nb_range_2_step, ...
               threshold, error_only );

% Test pivoted unblocked variants
total_errors = total_errors + ...
    Test_LTLt( 'piv_unb_right', n_range, nb_range_unb, threshold, ...
               error_only );
total_errors = total_errors + ...
    Test_LTLt( 'piv_unb_left', n_range, nb_range_unb, threshold, ...
               error_only );
total_errors = total_errors + ...
    Test_LTLt( 'piv_unb_2_step', n_range_2_step, nb_range_unb, ...
               threshold, error_only );

% Test pivoted blocked variants
total_errors = total_errors + ...
    Test_LTLt( 'piv_blk_right', n_range, nb_range, threshold, error_only );
total_errors = total_errors + ...
    Test_LTLt( 'piv_blk_right2a', n_range, nb_range, threshold, ...
               error_only );
total_errors = total_errors + ...
    Test_LTLt( 'piv_blk_right2b', n_range, nb_range, threshold, ...
               error_only );
total_errors = total_errors + ...
    Test_LTLt( 'piv_blk_2_step', n_range_2_step, nb_range_2_step, ...
               threshold, error_only );

total_errors

disp( sprintf( 'Potential problems detected for all versions: %4d', ...
               total_errors ) );